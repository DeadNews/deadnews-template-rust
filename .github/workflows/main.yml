name: Main

on:
  push:
    branches: [main]
    tags:
      - "v*"
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  lint:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b # v1
        with:
          toolchain: stable
          components: rustfmt

      - name: Rust Cache
        uses: swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0

      - name: Lint code
        run: make lint

  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b # v1
        with:
          toolchain: stable

      - name: Rust Cache
        uses: swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0

      - name: Run tests
        run: make test

  cargo-deploy:
    name: Release to crates.io
    if: github.ref_type == 'tag'
    needs: [lint, test]
    environment: crates.io
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b # v1
        with:
          toolchain: stable

      - name: Rust Cache
        uses: swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0

      - name: Set version in Cargo.toml
        run: |
          sed "s|^version =.*$|version = '${GITHUB_REF_NAME#v}'|" -i Cargo.toml

      - name: Sync Cargo.lock version
        run: cargo generate-lockfile

      - name: Publishing on crates.io
        run: cargo publish --locked --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  pypi-deploy:
    name: Release to PyPI
    if: github.ref_type == 'tag'
    needs: [lint, test]
    environment: pypi
    permissions:
      id-token: write
    strategy:
      matrix:
        os: [ubuntu-latest]
        arch: [x64]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Set version in Cargo.toml
        run: |
          sed "s|^version =.*$|version = '${GITHUB_REF_NAME#v}'|" -i Cargo.toml

      - name: Build wheel with maturin
        uses: PyO3/maturin-action@e10f6c464b90acceb5f640d31beda6d586ba7b4a # v1.49.3
        with:
          command: build
          args: --release --out dist
          target: ${{ matrix.arch }}

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4
        with:
          packages-dir: dist

  goreleaser:
    name: GoReleaser
    if: github.ref_type == 'tag'
    needs: [lint, test]
    environment: github-releases
    permissions:
      contents: write
    env:
      DRAFT: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b # v1
        with:
          toolchain: stable

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@9c156ee8a17a598857849441385a2041ef570552 # v6.3.0
        with:
          args: release --clean --draft=${{ env.DRAFT }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
