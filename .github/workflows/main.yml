name: Main

on:
  push:
    branches: [main]
    tags:
      - "v*"
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  lint:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@1482605bfc5719782e1267fd0c0cc350fe7646b8 # v1
        with:
          toolchain: stable
          components: rustfmt

      - name: Rust Cache
        uses: swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab # v2.7.5

      - name: Lint code
        run: make lint

  tests:
    name: Tests
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        toolchain: [stable, stable minus 1 releases]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@1482605bfc5719782e1267fd0c0cc350fe7646b8 # v1
        with:
          toolchain: ${{ matrix.toolchain }}

      - name: Rust Cache
        uses: swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab # v2.7.5

      - name: Run tests
        run: make test

  cargo-deploy:
    name: Release to crates.io
    if: github.ref_type == 'tag'
    needs: [lint, tests]
    environment: crates.io
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@1482605bfc5719782e1267fd0c0cc350fe7646b8 # v1
        with:
          toolchain: stable

      - name: Rust Cache
        uses: swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab # v2.7.5

      - name: Set version in Cargo.toml
        run: |
          sed "s|^version =.*$|version = '${GITHUB_REF_NAME#v}'|" -i Cargo.toml

      - name: Publishing on crates.io
        run: cargo publish --locked --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  github-deploy:
    name: Release to GitHub
    if: github.ref_type == 'tag'
    needs: [lint, tests]
    environment: github-releases
    permissions:
      contents: write
    env:
      CHANGELOG: https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md
      PRERELEASE: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create GitHub Release
        run: |
          gh release create ${{ github.ref_name }} \
            --title ${{ github.ref_name }} \
            --notes="See [the CHANGELOG](${{ env.CHANGELOG }}) for more details." \
            --draft=${{ env.PRERELEASE }} \
            --prerelease=${{ env.PRERELEASE }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
